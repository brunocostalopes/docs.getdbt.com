name: Lint and Suggest

on:
  pull_request:
    paths:
      - '**/*.md'

permissions:
  contents: read
  pull-requests: write

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Vale
      run: |
        curl -sfL https://install.goreleaser.com/github.com/errata-ai/vale.sh | sh
        echo "::add-path::$HOME/.local/bin"

    - name: Print Vale version
      run: vale --version

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Get all changed markdown files
      id: changed-markdown-files
      uses: tj-actions/changed-files@v44
      with:
        files: |
          **/*.md

    - name: List all changed markdown files
      if: steps.changed-markdown-files.outputs.any_changed == 'true'
      env:
        ALL_CHANGED_FILES: ${{ steps.changed-markdown-files.outputs.all_changed_files }}
      run: |
        for file in ${ALL_CHANGED_FILES}; do
          echo "$file was changed"
        done

    - name: Run Vale on changed files
      if: steps.changed-markdown-files.outputs.any_changed == 'true'
      env:
        ALL_CHANGED_FILES: ${{ steps.changed-markdown-files.outputs.all_changed_files }}
      run: |
        mkdir -p vale_output
        for file in $ALL_CHANGED_FILES; do
          vale --output=JSON $file > "vale_output/vale_output_${file//\//_}.json"
        done

    - name: Merge JSON outputs
      if: steps.changed-markdown-files.outputs.any_changed == 'true'
      run: jq -s '.' vale_output/vale_output_*.json > vale_report.json

    - name: Upload Vale report for Hyperlint
      if: steps.changed-markdown-files.outputs.any_changed == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: vale-report
        path: vale_report.json

    - name: Comment to trigger Hyperlint
      if: steps.changed-markdown-files.outputs.any_changed == 'true'
      run: |
        PR_NUMBER=$(echo ${{ github.event.pull_request.number }})
        curl -H "Authorization: token ${{ secrets.REVIEWDOG_GITHUB_API_TOKEN }}" \
             -X POST \
             -d '{"body":"hyperlint review"}' \
             "https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"
